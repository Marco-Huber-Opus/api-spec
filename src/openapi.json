{"openapi": "3.1.0", "info": {"title": "OpusDNS API", "summary": "OpusDNS - your gateway to a seamless domain management experience.", "description": "OpusDNS Backend API", "version": "2025-06-03-204059"}, "paths": {"/v1/auth/token": {"post": {"summary": "Issue Organization Token", "operationId": "issue_organization_token_v1_auth_token_post", "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/Body_issue_organization_token_v1_auth_token_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/OrganizationTokenResponse"}, {"$ref": "#/components/schemas/UserTokenResponse"}], "title": "Response Issue Organization Token V1 Auth Token Post"}}}}, "401": {"description": "Unauthorized", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "authentication", "title": "Authentication Error", "status": 401, "code": "ERROR_AUTHENTICATION", "detail": "Additional error context."}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"APIKeyHeader": []}, {"OAuth2PasswordBearer": []}]}}, "/v1/auth/logout": {"post": {"summary": "Logout", "operationId": "logout_v1_auth_logout_post", "responses": {"204": {"description": "Successful Response"}, "401": {"description": "Unauthorized", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "authentication", "title": "Authentication Error", "status": 401, "code": "ERROR_AUTHENTICATION", "detail": "Additional error context."}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/v1/auth/client_credentials": {"post": {"summary": "Issue Api Key", "operationId": "issue_api_key_v1_auth_client_credentials_post", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "User Id"}}, {"name": "organization_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "organization", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Organization Id"}}, {"name": "api_key_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "api_key", "pattern": "^api_key_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["api_key_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Api Key Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrganizationCredentialExtra"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrganizationCredentialCreated"}}}}, "401": {"description": "Unauthorized", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "authentication", "title": "Authentication Error", "status": 401, "code": "ERROR_AUTHENTICATION", "detail": "Additional error context."}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "get": {"summary": "List Api Keys", "operationId": "list_api_keys_v1_auth_client_credentials_get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "status", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/OrganizationCredentialStatus"}, {"type": "null"}], "description": "Optional status to filter the results", "title": "Status"}, "description": "Optional status to filter the results"}, {"name": "user_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "User Id"}}, {"name": "organization_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "organization", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Organization Id"}}, {"name": "api_key_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "api_key", "pattern": "^api_key_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["api_key_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Api Key Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Pagination_OrganizationCredential_"}}}}, "401": {"description": "Unauthorized", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "authentication", "title": "Authentication Error", "status": 401, "code": "ERROR_AUTHENTICATION", "detail": "Additional error context."}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/auth/client_credentials/{api_key_id}": {"delete": {"summary": "Delete Api Key", "operationId": "delete_api_key_v1_auth_client_credentials__api_key_id__delete", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "api_key_id", "in": "path", "required": true, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "api_key", "pattern": "^api_key_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["api_key_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Api Key Id"}}, {"name": "user_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "User Id"}}, {"name": "organization_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "organization", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Organization Id"}}], "responses": {"204": {"description": "Successful Response"}, "401": {"description": "Unauthorized", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "authentication", "title": "Authentication Error", "status": 401, "code": "ERROR_AUTHENTICATION", "detail": "Additional error context."}}}}, "404": {"description": "Not Found", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "organization-credential-not-found", "title": "Organization Management Error", "status": 404, "code": "ERROR_ORGANIZATION_CREDENTIAL_NOT_FOUND", "credential_id": "Additional error context.", "detail": "Organization credential with ID Additional error context. not found"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/auth/signup": {"post": {"summary": "Signup", "operationId": "signup_v1_auth_signup_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SignupCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/OrganizationTokenResponse"}, {"$ref": "#/components/schemas/UserTokenResponse"}], "title": "Response Signup V1 Auth Signup Post"}}}}, "409": {"description": "Conflict", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "user-already-present", "title": "User Management Error", "status": 409, "code": "ERROR_USER_EXISTS", "username": "Additional error context.", "detail": "User with username already exists"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/availability/dns": {"post": {"summary": "Bulk Dns Check Domain Availability", "operationId": "bulk_dns_check_domain_availability_v1_availability_dns_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/DomainsRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/DomainAvailabilityData"}, "type": "array", "title": "Response Bulk Dns Check Domain Availability V1 Availability Dns Post"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/availability/rdap": {"post": {"summary": "Bulk Rdap Check Domain Availability", "operationId": "bulk_rdap_check_domain_availability_v1_availability_rdap_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/DomainsRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/DomainAvailabilityData"}, "type": "array", "title": "Response Bulk Rdap Check Domain Availability V1 Availability Rdap Post"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/dns": {"post": {"summary": "Create Zone", "operationId": "create_zone_v1_dns_post", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DnsZoneCreate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/DnsChangesResponse"}, {"type": "null"}], "title": "Response Create Zone V1 Dns Post"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "get": {"summary": "List Zones", "operationId": "list_zones_v1_dns_get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "page", "in": "query", "required": false, "schema": {"type": "integer", "minimum": 1, "default": 1, "title": "Page"}}, {"name": "page_size", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 100, "minimum": 1, "default": 10, "title": "Page Size"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Pagination_DnsZoneResponse_"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/dns/{zone_name}": {"get": {"summary": "Get Zone", "operationId": "get_zone_v1_dns__zone_name__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "zone_name", "in": "path", "required": true, "schema": {"type": "string", "title": "Zone Name"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DnsZoneResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"summary": "Delete Zone", "operationId": "delete_zone_v1_dns__zone_name__delete", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "zone_name", "in": "path", "required": true, "schema": {"type": "string", "title": "Zone Name"}}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/dns/{zone_name}/rrsets": {"put": {"summary": "Update Zone", "operationId": "update_zone_v1_dns__zone_name__rrsets_put", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "zone_name", "in": "path", "required": true, "schema": {"type": "string", "title": "Zone Name"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DnsZoneRrsetsCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/dns/{zone_name}/dnssec/enable": {"post": {"summary": "Enable Dnssec", "operationId": "enable_dnssec_v1_dns__zone_name__dnssec_enable_post", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "zone_name", "in": "path", "required": true, "schema": {"type": "string", "title": "Zone Name"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DnsChangesResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/dns/{zone_name}/dnssec/disable": {"post": {"summary": "Disable Dnssec", "operationId": "disable_dnssec_v1_dns__zone_name__dnssec_disable_post", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "zone_name", "in": "path", "required": true, "schema": {"type": "string", "title": "Zone Name"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DnsChangesResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/email-forwards": {"post": {"summary": "Create Email Forward", "operationId": "create_email_forward_v1_email_forwards_post", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EmailForwardCreate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EmailForward"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "get": {"summary": "List Email Forwards", "operationId": "list_email_forwards_v1_email_forwards_get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "status", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/EmailForwardStatus"}, {"type": "null"}], "description": "Optional status to filter the results", "title": "Status"}, "description": "Optional status to filter the results"}, {"name": "source_address", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "Optional source address to filter the results", "title": "Source Address"}, "description": "Optional source address to filter the results"}, {"name": "target_address", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "Optional target address to filter the results", "title": "Target Address"}, "description": "Optional target address to filter the results"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Pagination_EmailForward_"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/email-forwards/{email_forward_id}": {"get": {"summary": "Get Email Forward", "operationId": "get_email_forward_v1_email_forwards__email_forward_id__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "email_forward_id", "in": "path", "required": true, "schema": {"type": "string", "format": "typeid", "x-typeid-prefix": "email_forward", "pattern": "^email_forward_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["email_forward_01h45ytscbebyvny4gc8cr8ma2"], "title": "Email Forward Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EmailForward"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"summary": "Delete Email Forward", "operationId": "delete_email_forward_v1_email_forwards__email_forward_id__delete", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "email_forward_id", "in": "path", "required": true, "schema": {"type": "string", "format": "typeid", "x-typeid-prefix": "email_forward", "pattern": "^email_forward_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["email_forward_01h45ytscbebyvny4gc8cr8ma2"], "title": "Email Forward Id"}}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"summary": "Update Email Forward", "operationId": "update_email_forward_v1_email_forwards__email_forward_id__patch", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "email_forward_id", "in": "path", "required": true, "schema": {"type": "string", "format": "typeid", "x-typeid-prefix": "email_forward", "pattern": "^email_forward_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["email_forward_01h45ytscbebyvny4gc8cr8ma2"], "title": "Email Forward Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EmailForwardUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EmailForward"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/email-forwards/bulk-update": {"patch": {"summary": "Bulk Update Email Forwards", "operationId": "bulk_update_email_forwards_v1_email_forwards_bulk_update_patch", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/EmailForwardBulkUpdate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BulkOperationResponse_EmailForwardBulkUpdateResult_"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/v1/email-forwards/bulk-delete": {"post": {"summary": "Bulk Delete Email Forwards", "operationId": "bulk_delete_email_forwards_v1_email_forwards_bulk_delete_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/EmailForwardBulkDelete"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BulkOperationResponse_EmailForwardBulkDeleteResult_"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/v1/notifications": {"get": {"summary": "List Notifications", "operationId": "list_notifications_v1_notifications_get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "query", "required": true, "schema": {"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"], "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Pagination_UserNotificationSummary_"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"summary": "Create Notification", "operationId": "create_notification_v1_notifications_post", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotificationCreate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Notification"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/notifications/{notification_id}": {"get": {"summary": "Get Notification", "operationId": "get_notification_v1_notifications__notification_id__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "notification_id", "in": "path", "required": true, "schema": {"type": "string", "format": "typeid", "x-typeid-prefix": "notification", "pattern": "^notification_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["notification_01h45ytscbebyvny4gc8cr8ma2"], "title": "Notification Id"}}, {"name": "user_id", "in": "query", "required": true, "schema": {"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"], "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserNotification"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"summary": "Update Notification", "operationId": "update_notification_v1_notifications__notification_id__put", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "notification_id", "in": "path", "required": true, "schema": {"type": "string", "format": "typeid", "x-typeid-prefix": "notification", "pattern": "^notification_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["notification_01h45ytscbebyvny4gc8cr8ma2"], "title": "Notification Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotificationUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Notification"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"summary": "Delete Notification", "operationId": "delete_notification_v1_notifications__notification_id__delete", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "notification_id", "in": "path", "required": true, "schema": {"type": "string", "format": "typeid", "x-typeid-prefix": "notification", "pattern": "^notification_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["notification_01h45ytscbebyvny4gc8cr8ma2"], "title": "Notification Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/notifications/{notification_id}/read": {"patch": {"summary": "Update Notification Read", "operationId": "update_notification_read_v1_notifications__notification_id__read_patch", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "notification_id", "in": "path", "required": true, "schema": {"type": "string", "format": "typeid", "x-typeid-prefix": "notification", "pattern": "^notification_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["notification_01h45ytscbebyvny4gc8cr8ma2"], "title": "Notification Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/organizations": {"post": {"summary": "Create Organization", "operationId": "create_organization_v1_organizations_post", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "User Id"}}, {"name": "organization_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "organization", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Organization Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrganizationCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Organization"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "get": {"summary": "List Organizations", "operationId": "list_organizations_v1_organizations_get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "User Id"}}, {"name": "organization_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "organization", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Organization Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Pagination_Organization_"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/organizations/users": {"get": {"summary": "List Users", "operationId": "list_users_v1_organizations_users_get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "User Id"}}, {"name": "organization_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "organization", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Organization Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Pagination_User_"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/organizations/attributes/{organization_id}": {"get": {"summary": "Get Attributes", "operationId": "get_attributes_v1_organizations_attributes__organization_id__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "organization_id", "in": "path", "required": true, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "organization", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Organization Id"}}, {"name": "keys", "in": "query", "required": false, "schema": {"anyOf": [{"type": "array", "items": {"type": "string"}}, {"type": "null"}], "description": "Optional list of attribute keys to filter", "title": "Keys"}, "description": "Optional list of attribute keys to filter"}, {"name": "user_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/OrganizationAttributeResponse"}, "title": "Response Get Attributes V1 Organizations Attributes  Organization Id  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"summary": "Update Attributes", "operationId": "update_attributes_v1_organizations_attributes__organization_id__patch", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "organization_id", "in": "path", "required": true, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "organization", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Organization Id"}}, {"name": "user_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "User Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/OrganizationAttributeUpdate"}, "title": "Attributes"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/OrganizationAttributeResponse"}, "title": "Response Update Attributes V1 Organizations Attributes  Organization Id  Patch"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/organizations/attributes": {"get": {"summary": "Get Attributes", "operationId": "get_attributes_v1_organizations_attributes_get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "organization_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "organization", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Organization Id"}}, {"name": "keys", "in": "query", "required": false, "schema": {"anyOf": [{"type": "array", "items": {"type": "string"}}, {"type": "null"}], "description": "Optional list of attribute keys to filter", "title": "Keys"}, "description": "Optional list of attribute keys to filter"}, {"name": "user_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/OrganizationAttributeResponse"}, "title": "Response Get Attributes V1 Organizations Attributes Get"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"summary": "Update Attributes", "operationId": "update_attributes_v1_organizations_attributes_patch", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "organization_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "organization", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Organization Id"}}, {"name": "user_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "User Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/OrganizationAttributeUpdate"}, "title": "Attributes"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/OrganizationAttributeResponse"}, "title": "Response Update Attributes V1 Organizations Attributes Patch"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/organizations/{organization_id}": {"get": {"summary": "Get Organization", "operationId": "get_organization_v1_organizations__organization_id__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "organization_id", "in": "path", "required": true, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "organization", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Organization Id"}}, {"name": "user_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Organization"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"summary": "Delete User", "operationId": "delete_user_v1_organizations__organization_id__delete", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "organization_id", "in": "path", "required": true, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "organization", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Organization Id"}}, {"name": "user_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "User Id"}}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"summary": "Update Organization", "operationId": "update_organization_v1_organizations__organization_id__patch", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "organization_id", "in": "path", "required": true, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "organization", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Organization Id"}}, {"name": "user_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "User Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrganizationUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Organization"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/rdap/host/{name}": {"get": {"summary": "Not Found", "operationId": "not_found_v1_rdap_host__name__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/v1/rdap/contact/{name}": {"get": {"summary": "Not Found", "operationId": "not_found_v1_rdap_contact__name__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/v1/rdap/domain/{name}": {"get": {"summary": "Not Found", "operationId": "not_found_v1_rdap_domain__name__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/v1/users": {"post": {"summary": "Create User", "operationId": "create_user_v1_users_post", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "User Id"}}, {"name": "organization_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "organization", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Organization Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/User"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/users/me": {"get": {"summary": "Get Current User", "operationId": "get_current_user_v1_users_me_get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "attributes", "in": "query", "required": false, "schema": {"anyOf": [{"type": "array", "items": {"type": "string"}}, {"type": "null"}], "title": "Attributes"}}, {"name": "user_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "User Id"}}, {"name": "organization_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "organization", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Organization Id"}}, {"name": "api_key_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "api_key", "pattern": "^api_key_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["api_key_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Api Key Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserWithRelationPermissions"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/users/verify": {"get": {"summary": "Redirect Verify User", "operationId": "redirect_verify_user_v1_users_verify_get", "parameters": [{"name": "token", "in": "query", "required": true, "schema": {"type": "string", "title": "Token"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/users/accept-tos": {"post": {"summary": "Tos Sign", "operationId": "tos_sign_v1_users_accept_tos_post", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "User Id"}}, {"name": "organization_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "organization", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Organization Id"}}, {"name": "api_key_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "api_key", "pattern": "^api_key_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["api_key_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Api Key Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TermsOfServiceAccept"}}}}, "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/users/{user_id}": {"get": {"summary": "Get User", "operationId": "get_user_v1_users__user_id__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "User Id"}}, {"name": "attributes", "in": "query", "required": false, "schema": {"anyOf": [{"type": "array", "items": {"type": "string"}}, {"type": "null"}], "title": "Attributes"}}, {"name": "organization_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "organization", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Organization Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserWithAttributes"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"summary": "Delete User", "operationId": "delete_user_v1_users__user_id__delete", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "User Id"}}, {"name": "organization_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "organization", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Organization Id"}}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"summary": "Update User", "operationId": "update_user_v1_users__user_id__patch", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "User Id"}}, {"name": "organization_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "organization", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Organization Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserWithAttributes"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/users/{user_id}/permissions": {"get": {"summary": "Get User Permissions", "operationId": "get_user_permissions_v1_users__user_id__permissions_get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "User Id"}}, {"name": "organization_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "organization", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Organization Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PermissionSet"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/users/me/verification": {"post": {"summary": "Create Verification Me", "operationId": "create_verification_me_v1_users_me_verification_post", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "type", "in": "query", "required": true, "schema": {"$ref": "#/components/schemas/VerificationType"}}], "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/UserVerificationEmailResponse"}, {"$ref": "#/components/schemas/UserVerificationApiResponse"}], "title": "Response Create Verification Me V1 Users Me Verification Post"}}}}, "401": {"description": "Unauthorized", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "authentication", "title": "Authentication Error", "status": 401, "code": "ERROR_AUTHENTICATION", "detail": "Additional error context."}}}}, "404": {"description": "Not Found", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "user-not-found", "title": "User Management Error", "status": 404, "code": "ERROR_USER_NOT_FOUND", "detail": "Additional error context."}}}}, "405": {"description": "Method Not Allowed", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "user-verification-type-invalid", "title": "User Management Error", "status": 405, "code": "ERROR_USER_VERIFICATION_INVALID_TYPE", "detail": "Invalid verification type: Additional error context."}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"summary": "Update Verification Me", "operationId": "update_verification_me_v1_users_me_verification_put", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "token", "in": "query", "required": true, "schema": {"type": "string", "title": "Token"}}], "responses": {"204": {"description": "Successful Response"}, "400": {"description": "Bad Request", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "examples": {"User Management Error": {"value": {"type": "user-verification-token-invalid", "title": "User Management Error", "status": 400, "code": "ERROR_USER_VERIFICATION_TOKEN_INVALID", "detail": "Invalid verification token"}}}}}}, "401": {"description": "Unauthorized", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "authentication", "title": "Authentication Error", "status": 401, "code": "ERROR_AUTHENTICATION", "detail": "Additional error context."}}}}, "404": {"description": "Not Found", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "user-verification-not-found", "title": "User Management Error", "status": 404, "code": "ERROR_USER_VERIFICATION_NOT_FOUND", "detail": "No user verification found for user: user_id=Additional error context."}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "get": {"summary": "Get Verification Status Me", "operationId": "get_verification_status_me_v1_users_me_verification_get", "security": [{"OAuth2PasswordBearer": []}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserVerificationResponse"}}}}, "401": {"description": "Unauthorized", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "authentication", "title": "Authentication Error", "status": 401, "code": "ERROR_AUTHENTICATION", "detail": "Additional error context."}}}}}}, "delete": {"summary": "Cancel Verification Me", "operationId": "cancel_verification_me_v1_users_me_verification_delete", "security": [{"OAuth2PasswordBearer": []}], "responses": {"204": {"description": "Successful Response"}, "401": {"description": "Unauthorized", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "authentication", "title": "Authentication Error", "status": 401, "code": "ERROR_AUTHENTICATION", "detail": "Additional error context."}}}}}}}, "/v1/users/{user_id}/verification": {"post": {"summary": "Create Verification", "operationId": "create_verification_v1_users__user_id__verification_post", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"], "title": "User Id"}}, {"name": "type", "in": "query", "required": true, "schema": {"$ref": "#/components/schemas/VerificationType"}}], "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/UserVerificationEmailResponse"}, {"$ref": "#/components/schemas/UserVerificationApiResponse"}], "title": "Response Create Verification V1 Users  User Id  Verification Post"}}}}, "401": {"description": "Unauthorized", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "authentication", "title": "Authentication Error", "status": 401, "code": "ERROR_AUTHENTICATION", "detail": "Additional error context."}}}}, "404": {"description": "Not Found", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "user-not-found", "title": "User Management Error", "status": 404, "code": "ERROR_USER_NOT_FOUND", "detail": "Additional error context."}}}}, "405": {"description": "Method Not Allowed", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "user-verification-type-invalid", "title": "User Management Error", "status": 405, "code": "ERROR_USER_VERIFICATION_INVALID_TYPE", "detail": "Invalid verification type: Additional error context."}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"summary": "Update Verification", "operationId": "update_verification_v1_users__user_id__verification_put", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"], "title": "User Id"}}, {"name": "token", "in": "query", "required": true, "schema": {"type": "string", "title": "Token"}}], "responses": {"204": {"description": "Successful Response"}, "400": {"description": "Bad Request", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "examples": {"User Management Error": {"value": {"type": "user-verification-token-invalid", "title": "User Management Error", "status": 400, "code": "ERROR_USER_VERIFICATION_TOKEN_INVALID", "detail": "Invalid verification token"}}}}}}, "401": {"description": "Unauthorized", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "authentication", "title": "Authentication Error", "status": 401, "code": "ERROR_AUTHENTICATION", "detail": "Additional error context."}}}}, "404": {"description": "Not Found", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "user-verification-not-found", "title": "User Management Error", "status": 404, "code": "ERROR_USER_VERIFICATION_NOT_FOUND", "detail": "No user verification found for user: user_id=Additional error context."}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "get": {"summary": "Get Verification Status", "operationId": "get_verification_status_v1_users__user_id__verification_get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"], "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserVerificationResponse"}}}}, "401": {"description": "Unauthorized", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "authentication", "title": "Authentication Error", "status": 401, "code": "ERROR_AUTHENTICATION", "detail": "Additional error context."}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"summary": "Cancel Verification", "operationId": "cancel_verification_v1_users__user_id__verification_delete", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"], "title": "User Id"}}], "responses": {"204": {"description": "Successful Response"}, "401": {"description": "Unauthorized", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "authentication", "title": "Authentication Error", "status": 401, "code": "ERROR_AUTHENTICATION", "detail": "Additional error context."}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/users/{user_id}/roles": {"get": {"summary": "List Roles", "operationId": "list_roles_v1_users__user_id__roles_get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "User Id"}}, {"name": "organization_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "organization", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Organization Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RelationSet"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"summary": "Update User Relations", "operationId": "update_user_relations_v1_users__user_id__roles_patch", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "user", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "User Id"}}, {"name": "organization_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "typeid", "x-typeid-prefix": "organization", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"]}, {"type": "null"}], "title": "Organization Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SpiceDbRelationshipUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RelationSet"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/domains": {"get": {"summary": "Get Domains", "operationId": "get_domains_v1_domains_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}, "security": [{"OAuth2PasswordBearer": []}]}, "post": {"summary": "Create Domain", "operationId": "create_domain_v1_domains_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/DomainCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DomainModel"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/v1/domains/{domain_id}": {"get": {"summary": "Get Domain", "operationId": "get_domain_v1_domains__domain_id__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "domain_id", "in": "path", "required": true, "schema": {"type": "string", "format": "typeid", "x-typeid-prefix": "domain", "pattern": "^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["domain_01h45ytscbebyvny4gc8cr8ma2"], "title": "Domain Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DomainModel"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/domains/{domain}": {"patch": {"summary": "Update Domain", "operationId": "update_domain_v1_domains__domain__patch", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "domain", "in": "path", "required": true, "schema": {"type": "string", "title": "Domain"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DomainUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"summary": "Delete Domain", "operationId": "delete_domain_v1_domains__domain__delete", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "domain", "in": "path", "required": true, "schema": {"type": "string", "title": "Domain"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/domains/{domain_name}/renew": {"post": {"summary": "Renew Domain", "operationId": "renew_domain_v1_domains__domain_name__renew_post", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "domain_name", "in": "path", "required": true, "schema": {"type": "string", "title": "Domain Name"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/domains/{domain_name}/restore": {"post": {"summary": "Restore Domain", "operationId": "restore_domain_v1_domains__domain_name__restore_post", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "domain_name", "in": "path", "required": true, "schema": {"type": "string", "title": "Domain Name"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/domains/{domain_name}/transfer": {"get": {"summary": "Transfer Domain", "operationId": "transfer_domain_v1_domains__domain_name__transfer_get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "domain_name", "in": "path", "required": true, "schema": {"type": "string", "title": "Domain Name"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/domains/{domain_name}/push": {"post": {"summary": "Push Domain", "operationId": "push_domain_v1_domains__domain_name__push_post", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "domain_name", "in": "path", "required": true, "schema": {"type": "string", "title": "Domain Name"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/domains/{domain_name}/dnssec": {"get": {"summary": "Get Dnssec", "operationId": "get_dnssec_v1_domains__domain_name__dnssec_get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "domain_name", "in": "path", "required": true, "schema": {"type": "string", "title": "Domain Name"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"summary": "Create Or Update Dnssec", "operationId": "create_or_update_dnssec_v1_domains__domain_name__dnssec_put", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "domain_name", "in": "path", "required": true, "schema": {"type": "string", "title": "Domain Name"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"summary": "Delete Dnssec", "operationId": "delete_dnssec_v1_domains__domain_name__dnssec_delete", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "domain_name", "in": "path", "required": true, "schema": {"type": "string", "title": "Domain Name"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/domains/system-status": {"get": {"summary": "Get System Status", "operationId": "get_system_status_v1_domains_system_status_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/v1/contacts": {"get": {"summary": "Get Contacts", "operationId": "get_contacts_v1_contacts_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Pagination_ContactSchema_"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}, "post": {"summary": "Create Contact", "operationId": "create_contact_v1_contacts_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContactCreate"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContactSchema"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/v1/contacts/{contact_id}": {"get": {"summary": "Get Contact", "operationId": "get_contact_v1_contacts__contact_id__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "contact_id", "in": "path", "required": true, "schema": {"type": "string", "format": "typeid", "x-typeid-prefix": "contact", "pattern": "^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["contact_01h45ytscbebyvny4gc8cr8ma2"], "title": "Contact Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContactSchema"}}}}, "404": {"description": "Not Found", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "contact-not-found", "title": "Contact Management Error", "status": 404, "code": "ERROR_CONTACT_NOT_FOUND", "contact_id": "Additional error context.", "detail": "Contact not found"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"summary": "Update Contact", "operationId": "update_contact_v1_contacts__contact_id__put", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "contact_id", "in": "path", "required": true, "schema": {"type": "string", "format": "typeid", "x-typeid-prefix": "contact", "pattern": "^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["contact_01h45ytscbebyvny4gc8cr8ma2"], "title": "Contact Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContactUpdate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContactSchema"}}}}, "404": {"description": "Not Found", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "contact-not-found", "title": "Contact Management Error", "status": 404, "code": "ERROR_CONTACT_NOT_FOUND", "contact_id": "Additional error context.", "detail": "Contact not found"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"summary": "Delete Contact", "operationId": "delete_contact_v1_contacts__contact_id__delete", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "contact_id", "in": "path", "required": true, "schema": {"type": "string", "format": "typeid", "x-typeid-prefix": "contact", "pattern": "^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["contact_01h45ytscbebyvny4gc8cr8ma2"], "title": "Contact Id"}}], "responses": {"204": {"description": "Successful Response"}, "404": {"description": "Not Found", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "contact-not-found", "title": "Contact Management Error", "status": 404, "code": "ERROR_CONTACT_NOT_FOUND", "contact_id": "Additional error context.", "detail": "Contact not found"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/contacts/{contact_id}/verification": {"post": {"summary": "Start Contact Verification", "operationId": "start_contact_verification_v1_contacts__contact_id__verification_post", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "contact_id", "in": "path", "required": true, "schema": {"type": "string", "format": "typeid", "x-typeid-prefix": "contact", "pattern": "^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["contact_01h45ytscbebyvny4gc8cr8ma2"], "title": "Contact Id"}}, {"name": "type", "in": "query", "required": true, "schema": {"$ref": "#/components/schemas/VerificationType"}}], "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/ContactVerificationEmailResponse"}, {"$ref": "#/components/schemas/ContactVerificationApiResponse"}], "title": "Response Start Contact Verification V1 Contacts  Contact Id  Verification Post"}}}}, "401": {"description": "Unauthorized", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "authentication", "title": "Authentication Error", "status": 401, "code": "ERROR_AUTHENTICATION", "detail": "Additional error context."}}}}, "404": {"description": "Not Found", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "contact-not-found", "title": "Contact Management Error", "status": 404, "code": "ERROR_CONTACT_NOT_FOUND", "contact_id": "Additional error context.", "detail": "Contact not found"}}}}, "405": {"description": "Method Not Allowed", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "contact-verification-type-invalid", "title": "Contact Management Error", "status": 405, "code": "ERROR_CONTACT_VERIFICATION_INVALID_TYPE", "detail": "Invalid verification type: Additional error context."}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"summary": "Update Verification", "operationId": "update_verification_v1_contacts__contact_id__verification_put", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "contact_id", "in": "path", "required": true, "schema": {"type": "string", "format": "typeid", "x-typeid-prefix": "contact", "pattern": "^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["contact_01h45ytscbebyvny4gc8cr8ma2"], "title": "Contact Id"}}, {"name": "token", "in": "query", "required": true, "schema": {"type": "string", "title": "Token"}}], "responses": {"204": {"description": "Successful Response"}, "400": {"description": "Bad Request", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "examples": {"Contact Management Error": {"value": {"type": "contact-verification-token-invalid", "title": "Contact Management Error", "status": 400, "code": "ERROR_INVALID_VERIFICATION_TOKEN", "contact_id": "Additional error context.", "detail": "Invalid verification token"}}}}}}, "401": {"description": "Unauthorized", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "authentication", "title": "Authentication Error", "status": 401, "code": "ERROR_AUTHENTICATION", "detail": "Additional error context."}}}}, "404": {"description": "Not Found", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "contact-verification-not-found", "title": "Contact Management Error", "status": 404, "code": "ERROR_CONTACT_VERIFICATION_NOT_FOUND", "contact_id": "Additional error context.", "detail": "No contact verification found"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "get": {"summary": "Get Verification Status", "operationId": "get_verification_status_v1_contacts__contact_id__verification_get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "contact_id", "in": "path", "required": true, "schema": {"type": "string", "format": "typeid", "x-typeid-prefix": "contact", "pattern": "^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["contact_01h45ytscbebyvny4gc8cr8ma2"], "title": "Contact Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContactVerificationResponse"}}}}, "401": {"description": "Unauthorized", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "authentication", "title": "Authentication Error", "status": 401, "code": "ERROR_AUTHENTICATION", "detail": "Additional error context."}}}}, "404": {"description": "Not Found", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "contact-verification-not-found", "title": "Contact Management Error", "status": 404, "code": "ERROR_CONTACT_VERIFICATION_NOT_FOUND", "contact_id": "Additional error context.", "detail": "No contact verification found"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"summary": "Cancel Verification", "operationId": "cancel_verification_v1_contacts__contact_id__verification_delete", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "contact_id", "in": "path", "required": true, "schema": {"type": "string", "format": "typeid", "x-typeid-prefix": "contact", "pattern": "^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["contact_01h45ytscbebyvny4gc8cr8ma2"], "title": "Contact Id"}}], "responses": {"204": {"description": "Successful Response"}, "401": {"description": "Unauthorized", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "authentication", "title": "Authentication Error", "status": 401, "code": "ERROR_AUTHENTICATION", "detail": "Additional error context."}}}}, "404": {"description": "Not Found", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/Problem"}, "example": {"type": "contact-verification-not-found", "title": "Contact Management Error", "status": 404, "code": "ERROR_CONTACT_VERIFICATION_NOT_FOUND", "contact_id": "Additional error context.", "detail": "No contact verification found"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/contacts/{contact_id}/verify": {"get": {"summary": "Email Verify Contact", "operationId": "email_verify_contact_v1_contacts__contact_id__verify_get", "parameters": [{"name": "contact_id", "in": "path", "required": true, "schema": {"type": "string", "format": "typeid", "x-typeid-prefix": "contact", "pattern": "^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "examples": ["contact_01h45ytscbebyvny4gc8cr8ma2"], "title": "Contact Id"}}, {"name": "token", "in": "query", "required": true, "schema": {"type": "string", "title": "Token"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/domain-search/suggest": {"get": {"summary": "Suggest Domains", "operationId": "suggest_domains_v1_domain_search_suggest_get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "query", "in": "query", "required": true, "schema": {"type": "string", "description": "The primary keyword or phrase for the domain search", "title": "Query"}, "description": "The primary keyword or phrase for the domain search"}, {"name": "tlds", "in": "query", "required": false, "schema": {"anyOf": [{"type": "array", "items": {"type": "string"}}, {"type": "null"}], "description": "The TLDs to include in the search", "title": "Tlds"}, "description": "The TLDs to include in the search"}, {"name": "limit", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer", "maximum": 100, "minimum": 1}, {"type": "null"}], "description": "The maximum number of domain suggestions to return", "title": "Limit"}, "description": "The maximum number of domain suggestions to return"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuggestResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/problem+json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"Body_issue_organization_token_v1_auth_token_post": {"properties": {"grant_type": {"$ref": "#/components/schemas/GrantType", "description": "The grant type for the authentication request."}, "client_id": {"anyOf": [{"type": "string", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "organization"}, {"type": "null"}], "title": "Client Id", "description": "The organization ID associated with the credentials."}, "client_secret": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Client Secret", "description": "Client secret for authentication."}, "username": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Username", "description": "Username for authentication."}, "password": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Password", "description": "Password for the user."}}, "type": "object", "title": "Body_issue_organization_token_v1_auth_token_post"}, "BulkOperationResponse_EmailForwardBulkDeleteResult_": {"properties": {"results": {"items": {"$ref": "#/components/schemas/BulkOperationResult"}, "type": "array", "title": "Results"}}, "type": "object", "required": ["results"], "title": "BulkOperationResponse[EmailForwardBulkDeleteResult]"}, "BulkOperationResponse_EmailForwardBulkUpdateResult_": {"properties": {"results": {"items": {"$ref": "#/components/schemas/BulkOperationResult"}, "type": "array", "title": "Results"}}, "type": "object", "required": ["results"], "title": "BulkOperationResponse[EmailForwardBulkUpdateResult]"}, "BulkOperationResult": {"properties": {"status": {"$ref": "#/components/schemas/BulkOperationStatus", "description": "Status of performed operation"}, "error_message": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error Message", "description": "Error message if operation failed"}}, "type": "object", "required": ["status"], "title": "BulkOperationResult"}, "BulkOperationStatus": {"type": "string", "enum": ["success", "failed"], "title": "BulkOperationStatus"}, "ContactCreate": {"properties": {"title": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Title", "description": "The title of the contact"}, "first_name": {"type": "string", "minLength": 1, "title": "First Name", "description": "The first name of the contact"}, "last_name": {"type": "string", "minLength": 1, "title": "Last Name", "description": "The last name of the contact"}, "org": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Org", "description": "The organization of the contact"}, "email": {"type": "string", "format": "email", "title": "Email", "description": "The email of the contact"}, "phone": {"anyOf": [{"type": "string", "format": "phone"}, {"type": "null"}], "title": "Phone", "description": "The contact'sphone number"}, "fax": {"anyOf": [{"type": "string", "format": "phone"}, {"type": "null"}], "title": "Fax", "description": "The contacts's fax number"}, "street": {"type": "string", "minLength": 1, "title": "Street", "description": "The address of the contact"}, "city": {"type": "string", "minLength": 1, "title": "City", "description": "The city of the contact"}, "state": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "State", "description": "The state of the contact"}, "postal_code": {"type": "string", "minLength": 1, "title": "Postal Code", "description": "The postal code of the contact"}, "country": {"type": "string", "minLength": 1, "title": "Country", "description": "The country of the contact"}, "disclose": {"type": "boolean", "title": "Disclose", "description": "Whether the contact should be disclosed"}}, "type": "object", "required": ["title", "first_name", "last_name", "org", "email", "street", "city", "state", "postal_code", "country", "disclose"], "title": "ContactCreate"}, "ContactSchema": {"properties": {"deleted_on": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Deleted On", "description": "The date/time the entry was deleted on"}, "created_on": {"type": "string", "format": "date-time", "title": "Created On", "description": "The date/time the entry was created on"}, "title": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Title", "description": "The title of the contact"}, "first_name": {"type": "string", "minLength": 1, "title": "First Name", "description": "The first name of the contact"}, "last_name": {"type": "string", "minLength": 1, "title": "Last Name", "description": "The last name of the contact"}, "org": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Org", "description": "The organization of the contact"}, "email": {"type": "string", "format": "email", "title": "Email", "description": "The email of the contact"}, "phone": {"anyOf": [{"type": "string", "format": "phone"}, {"type": "null"}], "title": "Phone", "description": "The contact'sphone number"}, "fax": {"anyOf": [{"type": "string", "format": "phone"}, {"type": "null"}], "title": "Fax", "description": "The contacts's fax number"}, "street": {"type": "string", "minLength": 1, "title": "Street", "description": "The address of the contact"}, "city": {"type": "string", "minLength": 1, "title": "City", "description": "The city of the contact"}, "state": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "State", "description": "The state of the contact"}, "postal_code": {"type": "string", "minLength": 1, "title": "Postal Code", "description": "The postal code of the contact"}, "country": {"type": "string", "minLength": 1, "title": "Country", "description": "The country of the contact"}, "disclose": {"type": "boolean", "title": "Disclose", "description": "Whether the contact should be disclosed"}, "contact_id": {"type": "string", "pattern": "^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "Contact Id", "examples": ["contact_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "contact"}, "organization_id": {"type": "string", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "Organization Id", "description": "The organization that owns the domain", "default": "None", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "organization"}}, "type": "object", "required": ["title", "first_name", "last_name", "org", "email", "street", "city", "state", "postal_code", "country", "disclose"], "title": "ContactSchema"}, "ContactUpdate": {"properties": {"title": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Title", "description": "The title of the contact"}, "first_name": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "First Name", "description": "The first name of the contact"}, "last_name": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Last Name", "description": "The last name of the contact"}, "org": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Org", "description": "The organization of the contact"}, "email": {"anyOf": [{"type": "string", "format": "email"}, {"type": "null"}], "title": "Email", "description": "The email of the contact"}, "phone": {"anyOf": [{"type": "string", "format": "phone"}, {"type": "null"}], "title": "Phone", "description": "The contact's phone number"}, "fax": {"anyOf": [{"type": "string", "format": "phone"}, {"type": "null"}], "title": "Fax", "description": "The contact's fax number"}, "street": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Street", "description": "The address of the contact"}, "city": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "City", "description": "The city of the contact"}, "state": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "State", "description": "The state of the contact"}, "postal_code": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Postal Code", "description": "The postal code of the contact"}, "country": {"anyOf": [{"type": "string", "pattern": "^\\w{2}$"}, {"type": "null"}], "title": "Country", "description": "The country of the contact"}}, "type": "object", "title": "ContactUpdate"}, "ContactVerificationApiResponse": {"properties": {"token": {"type": "string", "maxLength": 256, "minLength": 35, "title": "Token", "description": "The token to verify the email address"}, "updated_on": {"type": "string", "format": "date-time", "title": "Updated On", "description": "The date/time the entry was last updated on"}, "created_on": {"type": "string", "format": "date-time", "title": "Created On", "description": "The date/time the entry was created on"}, "status": {"$ref": "#/components/schemas/EmailVerificationStatus", "description": "Current status of the email verification", "default": "pending"}, "type": {"$ref": "#/components/schemas/VerificationType", "description": "The type of verification: 'api' for retrieving token via API, 'email' for retrieving via email"}, "verified_on": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Verified On", "description": "The date the verification was verified"}, "canceled_on": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Canceled On", "description": "The date the verification was cancelled"}, "contact_verification_id": {"type": "string", "pattern": "^contact_verification_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "Contact Verification Id", "examples": ["contact_verification_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "contact_verification"}, "contact_id": {"type": "string", "pattern": "^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "Contact Id", "description": "The contact that is being verified", "default": "None", "examples": ["contact_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "contact"}}, "type": "object", "required": ["token", "type"], "title": "ContactVerificationApiResponse"}, "ContactVerificationEmailResponse": {"properties": {"updated_on": {"type": "string", "format": "date-time", "title": "Updated On", "description": "The date/time the entry was last updated on"}, "created_on": {"type": "string", "format": "date-time", "title": "Created On", "description": "The date/time the entry was created on"}, "status": {"$ref": "#/components/schemas/EmailVerificationStatus", "description": "Current status of the email verification", "default": "pending"}, "type": {"$ref": "#/components/schemas/VerificationType", "description": "The type of verification: 'api' for retrieving token via API, 'email' for retrieving via email"}, "verified_on": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Verified On", "description": "The date the verification was verified"}, "canceled_on": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Canceled On", "description": "The date the verification was cancelled"}, "contact_verification_id": {"type": "string", "pattern": "^contact_verification_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "Contact Verification Id", "examples": ["contact_verification_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "contact_verification"}, "contact_id": {"type": "string", "pattern": "^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "Contact Id", "description": "The contact that is being verified", "default": "None", "examples": ["contact_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "contact"}}, "type": "object", "required": ["type"], "title": "ContactVerificationEmailResponse"}, "ContactVerificationResponse": {"properties": {"updated_on": {"type": "string", "format": "date-time", "title": "Updated On", "description": "The date/time the entry was last updated on"}, "created_on": {"type": "string", "format": "date-time", "title": "Created On", "description": "The date/time the entry was created on"}, "status": {"$ref": "#/components/schemas/EmailVerificationStatus", "description": "Current status of the email verification", "default": "pending"}, "type": {"$ref": "#/components/schemas/VerificationType", "description": "The type of verification: 'api' for retrieving token via API, 'email' for retrieving via email"}, "verified_on": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Verified On", "description": "The date the verification was verified"}, "canceled_on": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Canceled On", "description": "The date the verification was cancelled"}, "contact_verification_id": {"type": "string", "pattern": "^contact_verification_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "Contact Verification Id", "examples": ["contact_verification_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "contact_verification"}, "contact_id": {"type": "string", "pattern": "^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "Contact Id", "description": "The contact that is being verified", "default": "None", "examples": ["contact_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "contact"}}, "type": "object", "required": ["type"], "title": "ContactVerificationResponse"}, "Currency": {"type": "string", "enum": ["USD", "EUR"], "title": "Currency"}, "DnsChangeAction": {"type": "string", "enum": ["create_zone", "delete_zone", "create_record", "delete_record", "enable_dnssec", "disable_dnssec"], "title": "DnsChangeAction"}, "DnsChangeResponse": {"properties": {"action": {"$ref": "#/components/schemas/DnsChangeAction"}, "rrset_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Rrset Name"}, "rrset_type": {"anyOf": [{"$ref": "#/components/schemas/DnsRrsetType"}, {"type": "null"}]}, "record_data": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Record Data"}, "ttl": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Ttl"}}, "type": "object", "required": ["action", "rrset_name", "rrset_type", "record_data", "ttl"], "title": "DnsChangeResponse"}, "DnsChangesResponse": {"properties": {"zone_name": {"type": "string", "title": "Zone Name"}, "changeset_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Changeset Id"}, "num_changes": {"type": "integer", "title": "Num Changes"}, "changes": {"items": {"$ref": "#/components/schemas/DnsChangeResponse"}, "type": "array", "title": "Changes"}}, "type": "object", "required": ["zone_name", "changeset_id", "num_changes", "changes"], "title": "DnsChangesResponse"}, "DnsRecordCreate": {"properties": {"rdata": {"type": "string", "title": "Rdata"}}, "type": "object", "required": ["rdata"], "title": "DnsRecordCreate"}, "DnsRecordResponse": {"properties": {"rdata": {"type": "string", "title": "Rdata"}}, "type": "object", "required": ["rdata"], "title": "DnsRecordResponse"}, "DnsRrsetCreate": {"properties": {"name": {"type": "string", "title": "Name"}, "type": {"$ref": "#/components/schemas/DnsRrsetType"}, "ttl": {"type": "integer", "title": "Ttl"}, "records": {"items": {"$ref": "#/components/schemas/DnsRecordCreate"}, "type": "array", "title": "Records", "default": []}}, "type": "object", "required": ["name", "type", "ttl"], "title": "DnsRrsetCreate"}, "DnsRrsetResponse": {"properties": {"name": {"type": "string", "title": "Name"}, "type": {"$ref": "#/components/schemas/DnsRrsetType"}, "ttl": {"type": "integer", "title": "Ttl"}, "records": {"items": {"$ref": "#/components/schemas/DnsRecordResponse"}, "type": "array", "title": "Records", "default": []}}, "type": "object", "required": ["name", "type", "ttl"], "title": "DnsRrsetResponse"}, "DnsRrsetType": {"type": "string", "enum": ["A", "AAAA", "ALIAS", "CAA", "CNAME", "DNSKEY", "DS", "MX", "NS", "PTR", "TXT", "SOA", "SRV"], "title": "DnsRrsetType"}, "DnsZoneCreate": {"properties": {"rrsets": {"items": {"$ref": "#/components/schemas/DnsRrsetCreate"}, "type": "array", "title": "Rrsets", "default": []}, "dnssec_status": {"$ref": "#/components/schemas/DnssecStatus", "default": "disabled"}, "name": {"type": "string", "title": "Name"}}, "type": "object", "required": ["name"], "title": "DnsZoneCreate"}, "DnsZoneResponse": {"properties": {"dnssec_status": {"$ref": "#/components/schemas/DnssecStatus", "default": "disabled"}, "name": {"type": "string", "title": "Name"}, "domain_parts": {"$ref": "#/components/schemas/DomainNameParts", "default": {}}, "rrsets": {"items": {"$ref": "#/components/schemas/DnsRrsetResponse"}, "type": "array", "title": "Rrsets", "default": []}}, "type": "object", "required": ["name"], "title": "DnsZoneResponse"}, "DnsZoneRrsetsCreate": {"properties": {"rrsets": {"items": {"$ref": "#/components/schemas/DnsRrsetCreate"}, "type": "array", "title": "Rrsets", "default": []}}, "type": "object", "title": "DnsZoneRrsetsCreate"}, "DnssecStatus": {"type": "string", "enum": ["enabled", "disabled"], "title": "DnssecStatus"}, "DomainAvailabilityData": {"properties": {"domain": {"type": "string", "title": "Domain"}, "available": {"$ref": "#/components/schemas/DomainAvailabilityStatus"}, "error": {"anyOf": [{"$ref": "#/components/schemas/ErrorResponse"}, {"type": "null"}]}}, "type": "object", "required": ["domain", "available"], "title": "DomainAvailabilityData"}, "DomainAvailabilityStatus": {"type": "string", "enum": ["available", "unavailable", "error"], "title": "DomainAvailabilityStatus"}, "DomainContactType": {"type": "string", "enum": ["registrant", "admin", "tech", "billing"], "title": "DomainContactType"}, "DomainCreate": {"properties": {"domain": {"type": "string", "title": "Domain", "description": "The domain to be created"}, "period": {"$ref": "#/components/schemas/DomainPeriod", "description": "How long the domain should be registered for"}, "registrant_contact": {"type": "string", "pattern": "^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "Registrant Contact", "description": "The contact id of the registrant", "examples": ["contact_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "contact"}, "contacts": {"additionalProperties": {"type": "string", "pattern": "^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "examples": ["contact_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "contact"}, "propertyNames": {"$ref": "#/components/schemas/DomainContactType"}, "type": "object", "title": "Contacts", "description": "The contacts of the domain"}, "name_servers": {"anyOf": [{"items": {"$ref": "#/components/schemas/NameServer"}, "type": "array"}, {"type": "null"}], "title": "Name Servers", "description": "The name servers for the domain"}, "renewal_mode": {"$ref": "#/components/schemas/RenewalMode", "description": "The renewal mode of the domain"}}, "type": "object", "required": ["domain", "period", "registrant_contact", "contacts"], "title": "DomainCreate"}, "DomainModel": {"properties": {"updated_on": {"type": "string", "format": "date-time", "title": "Updated On", "description": "The date/time the entry was last updated on"}, "created_on": {"type": "string", "format": "date-time", "title": "Created On", "description": "The date/time the entry was created on"}, "sld": {"type": "string", "minLength": 1, "title": "Sld", "description": "The subdomain of the domain"}, "tld": {"type": "string", "minLength": 1, "title": "Tld", "description": "The top level domain of the domain"}, "roid": {"type": "string", "title": "Roid", "description": "The registry object id of the domain"}, "renewal_mode": {"$ref": "#/components/schemas/RenewalMode", "description": "The renewal mode of the domain"}, "auth_code": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Auth Code", "description": "The auth code for the domain"}, "auth_code_expires_on": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Auth Code Expires On", "description": "When the auth code expires"}, "transfer_lock": {"type": "boolean", "title": "Transfer Lock", "description": "Whether the domain is locked for transfer", "default": false}, "expires_on": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Expires On", "description": "When the domain expires"}, "created_registry": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Created Registry", "description": "When the domain was registered"}, "domain_id": {"type": "string", "pattern": "^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "Domain Id", "examples": ["domain_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "domain"}, "owner_id": {"type": "string", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "Owner Id", "description": "The organization that owns the domain", "default": "None", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "organization"}}, "type": "object", "required": ["sld", "tld", "roid"], "title": "DomainModel"}, "DomainNameParts": {"properties": {"subdomain": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Subdomain"}, "domain": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Domain"}, "suffix": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Suffix"}}, "type": "object", "title": "DomainNameParts"}, "DomainPeriod": {"properties": {"value": {"type": "integer", "title": "Value", "description": "The period of the domain"}, "unit": {"$ref": "#/components/schemas/DomainPeriodUnit", "description": "The unit of the period"}}, "type": "object", "required": ["value", "unit"], "title": "DomainPeriod"}, "DomainPeriodUnit": {"type": "string", "enum": ["y", "m", "d"], "title": "DomainPeriodUnit"}, "DomainSuggestionBase": {"properties": {"domain": {"type": "string", "title": "Domain", "description": "The domain name suggestion"}, "score": {"type": "integer", "title": "Score", "description": "The score of the domain"}}, "type": "object", "required": ["domain", "score"], "title": "DomainSuggestionBase"}, "DomainUpdate": {"properties": {"registrant_contact_id": {"anyOf": [{"type": "string", "pattern": "^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "examples": ["contact_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "contact"}, {"type": "null"}], "title": "Registrant Contact Id", "description": "The contact id of the registrant"}, "admin_contact_id": {"anyOf": [{"type": "string", "pattern": "^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "examples": ["contact_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "contact"}, {"type": "null"}], "title": "Admin Contact Id", "description": "The contact id of the admin"}, "tech_contact_id": {"anyOf": [{"type": "string", "pattern": "^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "examples": ["contact_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "contact"}, {"type": "null"}], "title": "Tech Contact Id", "description": "The contact id of the tech"}, "billing_contact_id": {"anyOf": [{"type": "string", "pattern": "^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "examples": ["contact_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "contact"}, {"type": "null"}], "title": "Billing Contact Id", "description": "The contact id of the billing"}, "name_servers": {"anyOf": [{"items": {"$ref": "#/components/schemas/NameServer"}, "type": "array"}, {"type": "null"}], "title": "Name Servers", "description": "The name servers for the domain"}}, "type": "object", "title": "DomainUpdate"}, "DomainsRequest": {"properties": {"domains": {"items": {"type": "string"}, "type": "array", "title": "Domains"}}, "type": "object", "required": ["domains"], "title": "DomainsRequest"}, "EmailForward": {"properties": {"updated_on": {"type": "string", "format": "date-time", "title": "Updated On", "description": "The date/time the entry was last updated on"}, "created_on": {"type": "string", "format": "date-time", "title": "Created On", "description": "The date/time the entry was created on"}, "source_address": {"type": "string", "format": "email", "title": "Source Address", "description": "The source email address to forward from"}, "target_address": {"type": "string", "format": "email", "title": "Target Address", "description": "The target email address to forward to"}, "status": {"$ref": "#/components/schemas/EmailForwardStatus", "description": "Current status of the email forward rule", "default": "active"}, "email_forward_id": {"type": "string", "pattern": "^email_forward_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "Email Forward Id", "examples": ["email_forward_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "email_forward"}}, "type": "object", "required": ["source_address", "target_address"], "title": "EmailForward"}, "EmailForwardBulkDelete": {"properties": {"email_forward_ids": {"items": {"type": "string", "pattern": "^email_forward_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "examples": ["email_forward_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "email_forward"}, "type": "array", "maxItems": 50, "minItems": 1, "uniqueItems": true, "title": "Email Forward Ids", "description": "List of email forward ids to delete"}}, "type": "object", "required": ["email_forward_ids"], "title": "EmailForwardBulkDelete"}, "EmailForwardBulkUpdate": {"properties": {"email_forwards": {"items": {"$ref": "#/components/schemas/EmailForwardBulkUpdateItem"}, "type": "array", "maxItems": 50, "minItems": 1, "title": "Email Forwards", "description": "List of email forwards data to update"}}, "type": "object", "required": ["email_forwards"], "title": "EmailForwardBulkUpdate"}, "EmailForwardBulkUpdateItem": {"properties": {"source_address": {"anyOf": [{"type": "string", "format": "email"}, {"type": "null"}], "title": "Source Address", "description": "The source email address to forward from"}, "target_address": {"anyOf": [{"type": "string", "format": "email"}, {"type": "null"}], "title": "Target Address", "description": "The target email address to forward to"}, "status": {"anyOf": [{"$ref": "#/components/schemas/EmailForwardStatus"}, {"type": "null"}], "description": "Current status of the email forward rule"}, "email_forward_id": {"type": "string", "pattern": "^email_forward_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "Email Forward Id", "description": "Unique identifier for the email forward", "examples": ["email_forward_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "email_forward"}}, "type": "object", "required": ["email_forward_id"], "title": "EmailForwardBulkUpdateItem"}, "EmailForwardCreate": {"properties": {"source_address": {"type": "string", "format": "email", "title": "Source Address", "description": "The source email address to forward from"}, "target_address": {"type": "string", "format": "email", "title": "Target Address", "description": "The target email address to forward to"}, "status": {"$ref": "#/components/schemas/EmailForwardStatus", "description": "Current status of the email forward rule", "default": "active"}}, "type": "object", "required": ["source_address", "target_address"], "title": "EmailForwardCreate"}, "EmailForwardStatus": {"type": "string", "enum": ["active", "inactive"], "title": "EmailForwardStatus"}, "EmailForwardUpdate": {"properties": {"source_address": {"anyOf": [{"type": "string", "format": "email"}, {"type": "null"}], "title": "Source Address", "description": "The source email address to forward from"}, "target_address": {"anyOf": [{"type": "string", "format": "email"}, {"type": "null"}], "title": "Target Address", "description": "The target email address to forward to"}, "status": {"anyOf": [{"$ref": "#/components/schemas/EmailForwardStatus"}, {"type": "null"}], "description": "Current status of the email forward rule"}}, "type": "object", "title": "EmailForwardUpdate"}, "EmailVerificationStatus": {"type": "string", "enum": ["verified", "pending", "canceled"], "title": "EmailVerificationStatus"}, "ErrorResponse": {"properties": {"error_type": {"type": "string", "title": "Error Type"}, "message": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Message"}, "details": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Details"}}, "type": "object", "required": ["error_type"], "title": "ErrorResponse"}, "GrantType": {"type": "string", "enum": ["client_credentials", "password", "refresh_token"], "title": "GrantType"}, "HTTPValidationError": {"properties": {"title": {"type": "string", "title": "Problem Title"}, "type": {"type": "string", "title": "Problem type"}, "status": {"type": "integer", "title": "Status code"}, "errors": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}, "type": "object", "required": ["type", "title", "errors", "status"], "title": "RequestValidationError"}, "JsonValue": {}, "NameServer": {"properties": {"name_server": {"type": "string", "title": "Name Server", "description": "The name server of the domain"}, "ip_address": {"type": "string", "format": "ipvanyaddress", "title": "Ip Address", "description": "The ip address of the name server"}}, "type": "object", "required": ["name_server", "ip_address"], "title": "NameServer"}, "Notification": {"properties": {"updated_on": {"type": "string", "format": "date-time", "title": "Updated On", "description": "The date/time the entry was last updated on"}, "created_on": {"type": "string", "format": "date-time", "title": "Created On", "description": "The date/time the entry was created on"}, "subject": {"type": "string", "title": "Subject", "description": "The subject of the notification"}, "publish_date": {"type": "string", "format": "date-time", "title": "Publish Date", "description": "The date/time the notification is to be published"}, "type": {"type": "string", "title": "Type", "description": "The type of notification"}, "source": {"type": "string", "title": "Source", "description": "Source of the notification"}, "message": {"type": "string", "title": "Message", "description": "The message content of the notification"}, "author": {"type": "string", "title": "Author", "description": "The user or system that created the notification"}, "target": {"type": "string", "title": "Target", "description": "Target audience (broadcast, account, user)"}, "notification_id": {"type": "string", "pattern": "^notification_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "Notification Id", "examples": ["notification_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "notification"}}, "type": "object", "required": ["subject", "type", "source", "message", "author", "target"], "title": "Notification"}, "NotificationCreate": {"properties": {"subject": {"type": "string", "title": "Subject", "description": "The subject of the notification"}, "publish_date": {"type": "string", "format": "date-time", "title": "Publish Date", "description": "The date/time the notification is to be published"}, "type": {"type": "string", "title": "Type", "description": "The type of notification"}, "source": {"type": "string", "title": "Source", "description": "Source of the notification"}, "message": {"type": "string", "title": "Message", "description": "The message content of the notification"}, "author": {"type": "string", "title": "Author", "description": "The user or system that created the notification"}, "target": {"type": "string", "title": "Target", "description": "Target audience (broadcast, account, user)"}}, "type": "object", "required": ["subject", "type", "source", "message", "author", "target"], "title": "NotificationCreate"}, "NotificationSummary": {"properties": {"subject": {"type": "string", "title": "Subject", "description": "The subject of the notification"}, "publish_date": {"type": "string", "format": "date-time", "title": "Publish Date", "description": "The date/time the notification is to be published"}, "type": {"type": "string", "title": "Type", "description": "The type of notification"}, "source": {"type": "string", "title": "Source", "description": "Source of the notification"}, "message": {"type": "string", "title": "Message", "description": "The message content of the notification"}, "author": {"type": "string", "title": "Author", "description": "The user or system that created the notification"}, "target": {"type": "string", "title": "Target", "description": "Target audience (broadcast, account, user)"}, "notification_id": {"type": "string", "pattern": "^notification_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "Notification Id", "examples": ["notification_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "notification"}}, "type": "object", "required": ["subject", "type", "source", "message", "author", "target"], "title": "NotificationSummary"}, "NotificationUpdate": {"properties": {"subject": {"type": "string", "title": "Subject", "description": "The subject of the notification"}, "publish_date": {"type": "string", "format": "date-time", "title": "Publish Date", "description": "The date/time the notification is to be published"}, "type": {"type": "string", "title": "Type", "description": "The type of notification"}, "source": {"type": "string", "title": "Source", "description": "Source of the notification"}, "message": {"type": "string", "title": "Message", "description": "The message content of the notification"}, "author": {"type": "string", "title": "Author", "description": "The user or system that created the notification"}, "target": {"type": "string", "title": "Target", "description": "Target audience (broadcast, account, user)"}}, "type": "object", "required": ["subject", "type", "source", "message", "author", "target"], "title": "NotificationUpdate"}, "Organization": {"properties": {"deleted_on": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Deleted On", "description": "The date/time the entry was deleted on"}, "created_on": {"type": "string", "format": "date-time", "title": "Created On", "description": "The date/time the entry was created on"}, "organization_name": {"type": "string", "minLength": 1, "title": "Organization Name", "description": "Name of the organization."}, "address_1": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Address 1", "description": "First line of the organization's address."}, "address_2": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Address 2", "description": "Second line of the organization's address."}, "city": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "City", "description": "City of the organization's address."}, "state_or_province": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "State Or Province", "description": "State or province of the organization's address."}, "postal_code": {"anyOf": [{"type": "string", "maxLength": 20, "minLength": 1}, {"type": "null"}], "title": "Postal Code", "description": "Postal code of the organization's address."}, "country_code": {"anyOf": [{"type": "string", "maxLength": 2, "pattern": "^\\w{2}$"}, {"type": "null"}], "title": "Country Code", "description": "ISO 3166-1 alpha-2 country code."}, "tax_id": {"anyOf": [{"type": "string", "maxLength": 50, "minLength": 1}, {"type": "null"}], "title": "Tax Id", "description": "Tax ID of the organization."}, "tax_id_type": {"anyOf": [{"type": "string", "maxLength": 50, "minLength": 1}, {"type": "null"}], "title": "Tax Id Type", "description": "Type of tax ID for the organization."}, "business_number": {"anyOf": [{"type": "string", "maxLength": 100, "minLength": 1}, {"type": "null"}], "title": "Business Number", "description": "Government issued business identifier for the organization issued."}, "tax_rate": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Tax Rate", "description": "Tax rate for the organization."}, "currency": {"anyOf": [{"$ref": "#/components/schemas/Currency"}, {"type": "null"}], "description": "The currency used by the organization."}, "default_locale": {"anyOf": [{"type": "string", "maxLength": 5, "minLength": 1}, {"type": "null"}], "title": "Default Locale", "description": "Default locale for the organization."}, "organization_id": {"type": "string", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "Organization Id", "description": "Unique identifier for the organization.", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "organization"}, "parent_organization_id": {"anyOf": [{"type": "string", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "organization"}, {"type": "null"}], "title": "Parent Organization Id", "description": "ID of the parent organization."}, "status": {"$ref": "#/components/schemas/OrganizationStatus", "description": "Status of the organization.", "default": "active"}, "users": {"items": {"$ref": "#/components/schemas/User"}, "type": "array", "title": "Users", "default": []}, "attributes": {"items": {"$ref": "#/components/schemas/OrganizationAttribute"}, "type": "array", "title": "Attributes", "default": []}}, "type": "object", "required": ["organization_name"], "title": "Organization"}, "OrganizationAttribute": {"properties": {"private": {"type": "boolean", "title": "Private", "description": "When true, the attribute is private and not visible to users.", "default": false}, "key": {"type": "string", "minLength": 1, "title": "Key", "description": "Key of the attribute."}, "value": {"anyOf": [{"$ref": "#/components/schemas/JsonValue"}, {"type": "null"}], "description": "Value of the attribute."}, "protected": {"type": "boolean", "title": "Protected", "description": "When true, the attribute is protected and cannot be modified by users.", "default": false}, "updated_on": {"type": "string", "format": "date-time", "title": "Updated On", "description": "The date/time the entry was last updated on"}, "created_on": {"type": "string", "format": "date-time", "title": "Created On", "description": "The date/time the entry was created on"}, "organization_attribute_id": {"type": "integer", "title": "Organization Attribute Id"}}, "type": "object", "required": ["key", "organization_attribute_id"], "title": "OrganizationAttribute"}, "OrganizationAttributeCreate": {"properties": {"private": {"type": "boolean", "title": "Private", "description": "When true, the attribute is private and not visible to users.", "default": false}, "key": {"type": "string", "minLength": 1, "title": "Key", "description": "Key of the attribute."}, "value": {"anyOf": [{"$ref": "#/components/schemas/JsonValue"}, {"type": "null"}], "description": "Value of the attribute."}, "protected": {"type": "boolean", "title": "Protected", "description": "When true, the attribute is protected and cannot be modified by users.", "default": false}}, "type": "object", "required": ["key"], "title": "OrganizationAttributeCreate"}, "OrganizationAttributeResponse": {"properties": {"key": {"type": "string", "minLength": 1, "title": "Key", "description": "Key of the attribute."}, "value": {"anyOf": [{"$ref": "#/components/schemas/JsonValue"}, {"type": "null"}], "description": "Value of the attribute."}, "protected": {"type": "boolean", "title": "Protected", "description": "When true, the attribute is protected and cannot be modified by users.", "default": false}, "updated_on": {"type": "string", "format": "date-time", "title": "Updated On", "description": "The date/time the entry was last updated on"}, "created_on": {"type": "string", "format": "date-time", "title": "Created On", "description": "The date/time the entry was created on"}, "organization_attribute_id": {"type": "integer", "title": "Organization Attribute Id"}}, "type": "object", "required": ["key", "organization_attribute_id"], "title": "OrganizationAttributeResponse"}, "OrganizationAttributeUpdate": {"properties": {"private": {"type": "boolean", "title": "Private", "description": "When true, the attribute is private and not visible to users.", "default": false}, "key": {"type": "string", "minLength": 1, "title": "Key", "description": "Key of the attribute."}, "value": {"anyOf": [{"$ref": "#/components/schemas/JsonValue"}, {"type": "null"}], "description": "Value of the attribute."}, "protected": {"type": "boolean", "title": "Protected", "description": "When true, the attribute is protected and cannot be modified by users.", "default": false}}, "type": "object", "required": ["key"], "title": "OrganizationAttributeUpdate"}, "OrganizationCreate": {"properties": {"organization_name": {"type": "string", "minLength": 1, "title": "Organization Name", "description": "Name of the organization."}, "address_1": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Address 1", "description": "First line of the organization's address."}, "address_2": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Address 2", "description": "Second line of the organization's address."}, "city": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "City", "description": "City of the organization's address."}, "state_or_province": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "State Or Province", "description": "State or province of the organization's address."}, "postal_code": {"anyOf": [{"type": "string", "maxLength": 20, "minLength": 1}, {"type": "null"}], "title": "Postal Code", "description": "Postal code of the organization's address."}, "country_code": {"anyOf": [{"type": "string", "maxLength": 2, "pattern": "^\\w{2}$"}, {"type": "null"}], "title": "Country Code", "description": "ISO 3166-1 alpha-2 country code."}, "tax_id": {"anyOf": [{"type": "string", "maxLength": 50, "minLength": 1}, {"type": "null"}], "title": "Tax Id", "description": "Tax ID of the organization."}, "tax_id_type": {"anyOf": [{"type": "string", "maxLength": 50, "minLength": 1}, {"type": "null"}], "title": "Tax Id Type", "description": "Type of tax ID for the organization."}, "business_number": {"anyOf": [{"type": "string", "maxLength": 100, "minLength": 1}, {"type": "null"}], "title": "Business Number", "description": "Government issued business identifier for the organization issued."}, "tax_rate": {"anyOf": [{"type": "number"}, {"type": "string"}, {"type": "null"}], "title": "Tax Rate", "description": "Tax rate for the organization."}, "currency": {"anyOf": [{"$ref": "#/components/schemas/Currency"}, {"type": "null"}], "description": "The currency used by the organization."}, "default_locale": {"anyOf": [{"type": "string", "maxLength": 5, "minLength": 1}, {"type": "null"}], "title": "Default Locale", "description": "Default locale for the organization."}, "parent_organization_id": {"anyOf": [{"type": "string", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "organization"}, {"type": "null"}], "title": "Parent Organization Id", "description": "ID of the parent organization."}, "users": {"items": {"$ref": "#/components/schemas/UserCreate"}, "type": "array", "title": "Users", "description": "List of users that needs to be created with the organization.", "default": []}, "attributes": {"items": {"$ref": "#/components/schemas/OrganizationAttributeCreate"}, "type": "array", "title": "Attributes", "description": "List of attributes for the organization.", "default": []}}, "type": "object", "required": ["organization_name"], "title": "OrganizationCreate"}, "OrganizationCredential": {"properties": {"api_key_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Api Key Name", "description": "Name of the organization credential. Only a-z, A-Z, 0-9, underscore, and hyphen are allowed."}, "api_key_description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Api Key Description", "description": "Description of the organization credential."}, "deleted_on": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Deleted On", "description": "The date/time the entry was deleted on"}, "last_used_on": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Last Used On", "description": "The date/time the entry was deleted on"}, "created_on": {"type": "string", "format": "date-time", "title": "Created On", "description": "The date/time the entry was created on"}, "organization_id": {"type": "string", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "Organization Id", "default": "None", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "organization"}, "api_key_id": {"type": "string", "pattern": "^api_key_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "Api Key Id", "description": "Unique identifier of the organization credential.", "examples": ["api_key_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "api_key"}, "status": {"$ref": "#/components/schemas/OrganizationCredentialStatus", "description": "The status of the organization credential.", "readOnly": true}}, "type": "object", "required": ["api_key_id", "status"], "title": "OrganizationCredential"}, "OrganizationCredentialCreated": {"properties": {"api_key_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Api Key Name", "description": "Name of the organization credential. Only a-z, A-Z, 0-9, underscore, and hyphen are allowed."}, "api_key_description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Api Key Description", "description": "Description of the organization credential."}, "deleted_on": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Deleted On", "description": "The date/time the entry was deleted on"}, "last_used_on": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Last Used On", "description": "The date/time the entry was deleted on"}, "created_on": {"type": "string", "format": "date-time", "title": "Created On", "description": "The date/time the entry was created on"}, "client_id": {"type": "string", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "Client Id", "default": "None", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "organization"}, "api_key": {"type": "string", "pattern": "^api_key_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "Api Key", "description": "Unique identifier of the organization credential.", "examples": ["api_key_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "api_key"}, "client_secret": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Client Secret", "description": "Plaintext secret to be hashed (not stored directly in the DB)."}, "status": {"$ref": "#/components/schemas/OrganizationCredentialStatus", "description": "The status of the organization credential.", "readOnly": true}}, "type": "object", "required": ["api_key", "status"], "title": "OrganizationCredentialCreated"}, "OrganizationCredentialExtra": {"properties": {"api_key_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Api Key Name", "description": "Name of the organization credential. Only a-z, A-Z, 0-9, underscore, and hyphen are allowed."}, "api_key_description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Api Key Description", "description": "Description of the organization credential."}, "expires_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Expires At", "description": "The date and time the credential expiration."}}, "type": "object", "title": "OrganizationCredentialExtra"}, "OrganizationCredentialStatus": {"type": "string", "enum": ["active", "revoked"], "title": "OrganizationCredentialStatus"}, "OrganizationStatus": {"type": "string", "enum": ["active", "inactive"], "title": "OrganizationStatus"}, "OrganizationTokenResponse": {"properties": {"access_token": {"type": "string", "title": "Access Token"}, "token_type": {"type": "string", "title": "Token Type", "default": "Bearer"}, "expires_in": {"type": "integer", "title": "Expires In"}}, "type": "object", "required": ["access_token", "expires_in"], "title": "OrganizationTokenResponse"}, "OrganizationUpdate": {"properties": {"organization_name": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Organization Name", "description": "Name of the organization."}, "address_1": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Address 1", "description": "First line of the organization's address."}, "address_2": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Address 2", "description": "Second line of the organization's address."}, "city": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "City", "description": "City of the organization's address."}, "state_or_province": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "State Or Province", "description": "State or province of the organization's address."}, "postal_code": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Postal Code", "description": "Postal code of the organization's address."}, "country_code": {"anyOf": [{"type": "string", "maxLength": 2, "minLength": 2, "pattern": "^\\w{2}$", "description": "ISO 3166-1 alpha-2 country code."}, {"type": "null"}], "title": "Country Code"}, "tax_id": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Tax Id", "description": "Tax ID of the organization."}, "tax_id_type": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Tax Id Type", "description": "Type of tax ID for the organization."}, "tax_rate": {"anyOf": [{"type": "number"}, {"type": "string"}, {"type": "null"}], "title": "Tax Rate", "description": "Tax rate for the organization."}, "business_number": {"anyOf": [{"type": "string", "maxLength": 100, "minLength": 1}, {"type": "null"}], "title": "Business Number", "description": "Government issued business identifier for the organization issued."}, "currency": {"anyOf": [{"$ref": "#/components/schemas/Currency"}, {"type": "null"}], "description": "The currency used by the organization."}, "default_locale": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Default Locale", "description": "Default locale for the organization."}}, "type": "object", "title": "OrganizationUpdate"}, "PaginationMetadata": {"properties": {"total_pages": {"type": "integer", "title": "Total Pages"}, "total_items": {"type": "integer", "title": "Total Items"}, "current_page": {"type": "integer", "title": "Current Page"}, "page_size": {"type": "integer", "title": "Page Size"}, "has_next_page": {"type": "boolean", "title": "Has Next Page"}, "has_previous_page": {"type": "boolean", "title": "Has Previous Page"}}, "type": "object", "required": ["total_pages", "total_items", "current_page", "page_size", "has_next_page", "has_previous_page"], "title": "PaginationMetadata"}, "Pagination_ContactSchema_": {"properties": {"results": {"items": {"$ref": "#/components/schemas/ContactSchema"}, "type": "array", "title": "Results"}, "pagination": {"$ref": "#/components/schemas/PaginationMetadata"}}, "type": "object", "required": ["results", "pagination"], "title": "Pagination[ContactSchema]"}, "Pagination_DnsZoneResponse_": {"properties": {"results": {"items": {"$ref": "#/components/schemas/DnsZoneResponse"}, "type": "array", "title": "Results"}, "pagination": {"$ref": "#/components/schemas/PaginationMetadata"}}, "type": "object", "required": ["results", "pagination"], "title": "Pagination[DnsZoneResponse]"}, "Pagination_EmailForward_": {"properties": {"results": {"items": {"$ref": "#/components/schemas/EmailForward"}, "type": "array", "title": "Results"}, "pagination": {"$ref": "#/components/schemas/PaginationMetadata"}}, "type": "object", "required": ["results", "pagination"], "title": "Pagination[EmailForward]"}, "Pagination_OrganizationCredential_": {"properties": {"results": {"items": {"$ref": "#/components/schemas/OrganizationCredential"}, "type": "array", "title": "Results"}, "pagination": {"$ref": "#/components/schemas/PaginationMetadata"}}, "type": "object", "required": ["results", "pagination"], "title": "Pagination[OrganizationCredential]"}, "Pagination_Organization_": {"properties": {"results": {"items": {"$ref": "#/components/schemas/Organization"}, "type": "array", "title": "Results"}, "pagination": {"$ref": "#/components/schemas/PaginationMetadata"}}, "type": "object", "required": ["results", "pagination"], "title": "Pagination[Organization]"}, "Pagination_UserNotificationSummary_": {"properties": {"results": {"items": {"$ref": "#/components/schemas/UserNotificationSummary"}, "type": "array", "title": "Results"}, "pagination": {"$ref": "#/components/schemas/PaginationMetadata"}}, "type": "object", "required": ["results", "pagination"], "title": "Pagination[UserNotificationSummary]"}, "Pagination_User_": {"properties": {"results": {"items": {"$ref": "#/components/schemas/User"}, "type": "array", "title": "Results"}, "pagination": {"$ref": "#/components/schemas/PaginationMetadata"}}, "type": "object", "required": ["results", "pagination"], "title": "Pagination[User]"}, "Permission": {"type": "string", "enum": ["acknowledge", "create", "delete", "manage_api_keys", "manage_billing", "manage_cms_content", "manage_dns_zones", "manage_domain_contacts", "manage_domains", "manage_email_forwards", "manage_products", "manage_reseller", "manage_user_relations", "manage_users", "premium_reseller", "renew_expire", "sign_org_tos", "transfer_trade", "update", "view", "view_audit_logs"], "title": "Permission"}, "PermissionSet": {"properties": {"permissions": {"items": {"$ref": "#/components/schemas/Permission"}, "type": "array", "title": "Permissions", "default": []}}, "type": "object", "title": "PermissionSet"}, "Relation": {"type": "string", "enum": ["accepted_tos", "admin", "api_admin", "billing_manager", "client_api_key", "cms_content_editor", "domain_manager", "email_forward_manager", "member", "organization_manager", "owner", "parent", "product_manager", "recipient", "reseller_manager", "self", "special_relation"], "title": "Relation"}, "RelationSet": {"properties": {"relations": {"items": {"$ref": "#/components/schemas/Relation"}, "type": "array", "title": "Relations", "default": []}}, "type": "object", "title": "RelationSet"}, "RenewalMode": {"type": "string", "enum": ["renew", "expire", "delete"], "title": "RenewalMode"}, "SignupCreate": {"properties": {"user": {"$ref": "#/components/schemas/UserCreate", "description": "User signup to platform."}, "organization": {"$ref": "#/components/schemas/OrganizationCreate", "description": "Organization signup."}, "terms_of_service": {"anyOf": [{"$ref": "#/components/schemas/TermsOfServiceAccept"}, {"type": "null"}], "description": "Optional terms of service acceptance."}}, "type": "object", "required": ["user", "organization"], "title": "SignupCreate"}, "SpiceDbRelationshipUpdate": {"properties": {"add": {"anyOf": [{"items": {"$ref": "#/components/schemas/Relation"}, "type": "array"}, {"type": "null"}], "title": "Add"}, "remove": {"anyOf": [{"items": {"$ref": "#/components/schemas/Relation"}, "type": "array"}, {"type": "null"}], "title": "Remove"}}, "type": "object", "title": "SpiceDbRelationshipUpdate"}, "SuggestResponse": {"properties": {"domains": {"items": {"$ref": "#/components/schemas/DomainSuggestionBase"}, "type": "array", "title": "Domains", "default": []}}, "type": "object", "title": "SuggestResponse"}, "TermsOfServiceAccept": {"properties": {"accepted": {"type": "boolean", "title": "Accepted"}}, "type": "object", "required": ["accepted"], "title": "TermsOfServiceAccept"}, "User": {"properties": {"deleted_on": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Deleted On", "description": "The date/time the entry was deleted on"}, "updated_on": {"type": "string", "format": "date-time", "title": "Updated On", "description": "The date/time the entry was last updated on"}, "created_on": {"type": "string", "format": "date-time", "title": "Created On", "description": "The date/time the entry was created on"}, "username": {"type": "string", "minLength": 1, "title": "Username", "description": "The user's unique username"}, "first_name": {"type": "string", "minLength": 1, "title": "First Name", "description": "The user's first name"}, "last_name": {"type": "string", "minLength": 1, "title": "Last Name", "description": "The user's last name"}, "email": {"type": "string", "format": "email", "title": "Email", "description": "The user's email address"}, "phone": {"anyOf": [{"type": "string", "format": "phone"}, {"type": "null"}], "title": "Phone", "description": "The user's phone number"}, "status": {"$ref": "#/components/schemas/UserStatus", "description": "The user's status", "default": "active"}, "locale": {"type": "string", "maxLength": 5, "minLength": 1, "title": "Locale", "description": "The locale"}, "organization_id": {"type": "string", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "Organization Id", "description": "The user's organization id", "default": "None", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "organization"}, "user_id": {"type": "string", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "User Id", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "user"}}, "type": "object", "required": ["username", "first_name", "last_name", "email", "locale"], "title": "User"}, "UserAttributeUpdate": {"properties": {"key": {"type": "string", "minLength": 1, "title": "Key", "description": "Key of the attribute."}, "value": {"anyOf": [{"$ref": "#/components/schemas/JsonValue"}, {"type": "null"}], "description": "Value of the attribute."}}, "type": "object", "required": ["key"], "title": "UserAttributeUpdate"}, "UserCreate": {"properties": {"username": {"type": "string", "minLength": 1, "title": "Username", "description": "The user's unique username"}, "first_name": {"type": "string", "minLength": 1, "title": "First Name", "description": "The user's first name"}, "last_name": {"type": "string", "minLength": 1, "title": "Last Name", "description": "The user's last name"}, "email": {"type": "string", "format": "email", "title": "Email", "description": "The user's email address"}, "phone": {"anyOf": [{"type": "string", "format": "phone"}, {"type": "null"}], "title": "Phone", "description": "The user's phone number"}, "status": {"$ref": "#/components/schemas/UserStatus", "description": "The user's status", "default": "active"}, "locale": {"type": "string", "maxLength": 5, "minLength": 1, "title": "Locale", "description": "The locale"}, "password": {"type": "string", "title": "Password", "description": "Plaintext password for hashing during creation", "examples": ["correcthorsebatterystaple"]}}, "type": "object", "required": ["username", "first_name", "last_name", "email", "locale", "password"], "title": "UserCreate"}, "UserNotification": {"properties": {"updated_on": {"type": "string", "format": "date-time", "title": "Updated On", "description": "The date/time the entry was last updated on"}, "created_on": {"type": "string", "format": "date-time", "title": "Created On", "description": "The date/time the entry was created on"}, "user_notification_id": {"type": "string", "pattern": "^user_notification_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "User Notification Id", "examples": ["user_notification_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "user_notification"}, "status": {"$ref": "#/components/schemas/UserNotificationStatus", "description": "Whether the user has read the notification", "default": "unread"}, "user_id": {"type": "string", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "User Id", "default": "None", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "user"}, "notification_id": {"type": "string", "pattern": "^notification_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "Notification Id", "description": "Unique identifier for the notification", "default": "None", "examples": ["notification_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "notification"}, "notification": {"$ref": "#/components/schemas/Notification"}}, "type": "object", "required": ["notification"], "title": "UserNotification"}, "UserNotificationStatus": {"type": "string", "enum": ["read", "unread"], "title": "UserNotificationStatus"}, "UserNotificationSummary": {"properties": {"user_notification_id": {"type": "string", "pattern": "^user_notification_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "User Notification Id", "examples": ["user_notification_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "user_notification"}, "status": {"$ref": "#/components/schemas/UserNotificationStatus", "description": "Whether the user has read the notification", "default": "unread"}, "notification": {"$ref": "#/components/schemas/NotificationSummary"}}, "type": "object", "required": ["notification"], "title": "UserNotificationSummary"}, "UserStatus": {"type": "string", "enum": ["active", "inactive"], "title": "UserStatus"}, "UserTokenResponse": {"properties": {"access_token": {"type": "string", "title": "Access Token"}, "token_type": {"type": "string", "title": "Token Type", "default": "Bearer"}, "expires_in": {"type": "integer", "title": "Expires In"}, "refresh_token": {"type": "string", "title": "Refresh Token"}, "refresh_expires_in": {"type": "integer", "title": "Refresh Expires In"}}, "type": "object", "required": ["access_token", "expires_in", "refresh_token", "refresh_expires_in"], "title": "UserTokenResponse"}, "UserUpdate": {"properties": {"username": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Username", "description": "The user's unique username"}, "first_name": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "First Name", "description": "The user's first name"}, "last_name": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Last Name", "description": "The user's last name"}, "email": {"anyOf": [{"type": "string", "format": "email"}, {"type": "null"}], "title": "Email", "description": "The user's email address"}, "phone": {"anyOf": [{"type": "string", "format": "phone"}, {"type": "null"}], "title": "Phone", "description": "The user's phone number"}, "status": {"anyOf": [{"$ref": "#/components/schemas/UserStatus"}, {"type": "null"}], "description": "The user's status"}, "locale": {"anyOf": [{"type": "string", "maxLength": 5, "minLength": 1}, {"type": "null"}], "title": "Locale", "description": "The user's locale"}, "user_attributes": {"anyOf": [{"items": {"$ref": "#/components/schemas/UserAttributeUpdate"}, "type": "array"}, {"type": "null"}], "title": "User Attributes", "description": "User attributes"}}, "type": "object", "title": "UserUpdate"}, "UserVerificationApiResponse": {"properties": {"token": {"type": "string", "maxLength": 256, "minLength": 35, "title": "Token", "description": "The token to verify the email address"}, "updated_on": {"type": "string", "format": "date-time", "title": "Updated On", "description": "The date/time the entry was last updated on"}, "created_on": {"type": "string", "format": "date-time", "title": "Created On", "description": "The date/time the entry was created on"}, "status": {"$ref": "#/components/schemas/EmailVerificationStatus", "description": "Current status of the email verification", "default": "pending"}, "type": {"$ref": "#/components/schemas/VerificationType", "description": "The type of verification: 'api' for retrieving token via API, 'email' for retrieving via email"}, "verified_on": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Verified On", "description": "The date the verification was verified"}, "canceled_on": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Canceled On", "description": "The date the verification was cancelled"}, "user_verification_id": {"type": "string", "pattern": "^user_verification_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "User Verification Id", "examples": ["user_verification_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "user_verification"}, "user_id": {"type": "string", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "User Id", "description": "The user's id", "default": "None", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "user"}}, "type": "object", "required": ["token", "type"], "title": "UserVerificationApiResponse"}, "UserVerificationEmailResponse": {"properties": {"updated_on": {"type": "string", "format": "date-time", "title": "Updated On", "description": "The date/time the entry was last updated on"}, "created_on": {"type": "string", "format": "date-time", "title": "Created On", "description": "The date/time the entry was created on"}, "status": {"$ref": "#/components/schemas/EmailVerificationStatus", "description": "Current status of the email verification", "default": "pending"}, "type": {"$ref": "#/components/schemas/VerificationType", "description": "The type of verification: 'api' for retrieving token via API, 'email' for retrieving via email"}, "verified_on": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Verified On", "description": "The date the verification was verified"}, "canceled_on": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Canceled On", "description": "The date the verification was cancelled"}, "user_verification_id": {"type": "string", "pattern": "^user_verification_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "User Verification Id", "examples": ["user_verification_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "user_verification"}, "user_id": {"type": "string", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "User Id", "description": "The user's id", "default": "None", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "user"}}, "type": "object", "required": ["type"], "title": "UserVerificationEmailResponse"}, "UserVerificationResponse": {"properties": {"updated_on": {"type": "string", "format": "date-time", "title": "Updated On", "description": "The date/time the entry was last updated on"}, "created_on": {"type": "string", "format": "date-time", "title": "Created On", "description": "The date/time the entry was created on"}, "status": {"$ref": "#/components/schemas/EmailVerificationStatus", "description": "Current status of the email verification", "default": "pending"}, "type": {"$ref": "#/components/schemas/VerificationType", "description": "The type of verification: 'api' for retrieving token via API, 'email' for retrieving via email"}, "verified_on": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Verified On", "description": "The date the verification was verified"}, "canceled_on": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Canceled On", "description": "The date the verification was cancelled"}, "user_verification_id": {"type": "string", "pattern": "^user_verification_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "User Verification Id", "examples": ["user_verification_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "user_verification"}, "user_id": {"type": "string", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "User Id", "description": "The user's id", "default": "None", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "user"}}, "type": "object", "required": ["type"], "title": "UserVerificationResponse"}, "UserWithAttributes": {"properties": {"deleted_on": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Deleted On", "description": "The date/time the entry was deleted on"}, "updated_on": {"type": "string", "format": "date-time", "title": "Updated On", "description": "The date/time the entry was last updated on"}, "created_on": {"type": "string", "format": "date-time", "title": "Created On", "description": "The date/time the entry was created on"}, "username": {"type": "string", "minLength": 1, "title": "Username", "description": "The user's unique username"}, "first_name": {"type": "string", "minLength": 1, "title": "First Name", "description": "The user's first name"}, "last_name": {"type": "string", "minLength": 1, "title": "Last Name", "description": "The user's last name"}, "email": {"type": "string", "format": "email", "title": "Email", "description": "The user's email address"}, "phone": {"anyOf": [{"type": "string", "format": "phone"}, {"type": "null"}], "title": "Phone", "description": "The user's phone number"}, "status": {"$ref": "#/components/schemas/UserStatus", "description": "The user's status", "default": "active"}, "locale": {"type": "string", "maxLength": 5, "minLength": 1, "title": "Locale", "description": "The locale"}, "organization_id": {"type": "string", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "Organization Id", "description": "The user's organization id", "default": "None", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "organization"}, "user_id": {"type": "string", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "User Id", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "user"}, "user_attributes": {"additionalProperties": {"$ref": "#/components/schemas/JsonValue"}, "type": "object", "title": "User Attributes", "default": {}}}, "type": "object", "required": ["username", "first_name", "last_name", "email", "locale"], "title": "UserWithAttributes"}, "UserWithRelationPermissions": {"properties": {"deleted_on": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Deleted On", "description": "The date/time the entry was deleted on"}, "updated_on": {"type": "string", "format": "date-time", "title": "Updated On", "description": "The date/time the entry was last updated on"}, "created_on": {"type": "string", "format": "date-time", "title": "Created On", "description": "The date/time the entry was created on"}, "username": {"type": "string", "minLength": 1, "title": "Username", "description": "The user's unique username"}, "first_name": {"type": "string", "minLength": 1, "title": "First Name", "description": "The user's first name"}, "last_name": {"type": "string", "minLength": 1, "title": "Last Name", "description": "The user's last name"}, "email": {"type": "string", "format": "email", "title": "Email", "description": "The user's email address"}, "phone": {"anyOf": [{"type": "string", "format": "phone"}, {"type": "null"}], "title": "Phone", "description": "The user's phone number"}, "status": {"$ref": "#/components/schemas/UserStatus", "description": "The user's status", "default": "active"}, "locale": {"type": "string", "maxLength": 5, "minLength": 1, "title": "Locale", "description": "The locale"}, "organization_id": {"type": "string", "pattern": "^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "Organization Id", "description": "The user's organization id", "default": "None", "examples": ["organization_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "organization"}, "user_id": {"type": "string", "pattern": "^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$", "format": "typeid", "title": "User Id", "examples": ["user_01h45ytscbebyvny4gc8cr8ma2"], "x-typeid-prefix": "user"}, "user_attributes": {"additionalProperties": {"$ref": "#/components/schemas/JsonValue"}, "type": "object", "title": "User Attributes", "default": {}}, "relations": {"anyOf": [{"items": {"$ref": "#/components/schemas/Relation"}, "type": "array"}, {"type": "null"}], "title": "Relations"}, "permissions": {"anyOf": [{"items": {"$ref": "#/components/schemas/Permission"}, "type": "array"}, {"type": "null"}], "title": "Permissions"}}, "type": "object", "required": ["username", "first_name", "last_name", "email", "locale"], "title": "UserWithRelationPermissions"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}, "VerificationType": {"type": "string", "enum": ["api", "email"], "title": "VerificationType"}, "Problem": {"properties": {"title": {"type": "string", "title": "Problem Title"}, "type": {"type": "string", "title": "Problem type"}, "status": {"type": "integer", "title": "Status code"}, "detail": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Problem detail"}}, "type": "object", "required": ["type", "title", "detail", "status"], "title": "Problem"}}, "securitySchemes": {"APIKeyHeader": {"type": "apiKey", "description": "API key for the organization.", "in": "header", "name": "X-Api-Key"}, "OAuth2PasswordBearer": {"type": "oauth2", "flows": {"password": {"scopes": {}, "tokenUrl": "token"}}}}}}